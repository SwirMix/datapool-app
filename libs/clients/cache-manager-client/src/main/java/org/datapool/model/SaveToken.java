/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.datapool.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

/**
 * SaveToken
 */
public class SaveToken {
  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public SaveToken(String token, String project){
    this.project = project;
    this.token = token;
  }

  public SaveToken token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/


  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public SaveToken project(String project) {
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/


  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    this.project = project;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveToken saveToken = (SaveToken) o;
    return Objects.equals(this.token, saveToken.token) &&
        Objects.equals(this.project, saveToken.project);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, project);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveToken {\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

