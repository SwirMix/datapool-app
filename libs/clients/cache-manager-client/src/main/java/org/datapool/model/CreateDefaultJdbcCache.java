/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.datapool.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.datapool.model.PostgresJdbcProps;

/**
 * CreateDefaultJdbcCache
 */
public class CreateDefaultJdbcCache {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private String projectId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TABLE_NAME = "tableName";
  @SerializedName(SERIALIZED_NAME_TABLE_NAME)
  private String tableName;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private PostgresJdbcProps properties;


  public CreateDefaultJdbcCache id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/


  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CreateDefaultJdbcCache projectId(String projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/


  public String getProjectId() {
    return projectId;
  }


  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }


  public CreateDefaultJdbcCache name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/


  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateDefaultJdbcCache tableName(String tableName) {
    
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/


  public String getTableName() {
    return tableName;
  }


  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  public CreateDefaultJdbcCache properties(PostgresJdbcProps properties) {
    
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/


  public PostgresJdbcProps getProperties() {
    return properties;
  }


  public void setProperties(PostgresJdbcProps properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDefaultJdbcCache createDefaultJdbcCache = (CreateDefaultJdbcCache) o;
    return Objects.equals(this.id, createDefaultJdbcCache.id) &&
        Objects.equals(this.projectId, createDefaultJdbcCache.projectId) &&
        Objects.equals(this.name, createDefaultJdbcCache.name) &&
        Objects.equals(this.tableName, createDefaultJdbcCache.tableName) &&
        Objects.equals(this.properties, createDefaultJdbcCache.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectId, name, tableName, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDefaultJdbcCache {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

